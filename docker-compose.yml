networks:
  services-network:
    driver: bridge

services:
  services-db:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    container_name: "services-db"
    ports:
      - "1433:1433"
    volumes: 
      - sqlsystem:/var/opt/mssql/
      - sqldata:/var/opt/sqlserver/data
      - sqllog:/var/opt/sqlserver/log
      - sqlbackup:/var/opt/sqlserver/backup
    environment:
      SA_PASSWORD: "dev@1234"
      ACCEPT_EULA: "Y"
    healthcheck:
      test: ["CMD", "sqlcmd", "-S", "localhost", "-U", "sa", "-P", "dev@1234", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - services-network

  rabbitmq-service:
    image: masstransit/rabbitmq
    container_name: rabbitmq-service
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - services-network

  cache-service:
    image: redis:6.2-alpine
    container_name: cache-service
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - services-network

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - services-network

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.11.0
    ports:
      - 5601:5601
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://kibana/api/status || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_PUBLICBASEURL=http://localhost:5601
    networks:
      - services-network

  auction-service:
    image: yagooliverce/auction-service:latest
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80;https://+:443
      - ConnectionStrings__AuctionServiceDb=Server=services-db;Database=AuctionService;User=sa;Password=dev@1234;Trust Server Certificate=True;
      - ConnectionStrings__RedisConnection=cache-service:6379,password=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      - BackgroundService__ExecutionIntervalInMilliseconds=60000
      - RabbitMQ__Host=rabbitmq-service
      - RabbitMQ__VirtualHost=/
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__QueueName=auction-service
      - ElasticConfiguration__Uri=http://elasticsearch:9200
      - ElasticConfiguration__ServiceName=auctions-service
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/certs/localhost.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password123
    volumes:
      - ./devcerts:/app/certs:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://auction-service/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - services-network
    depends_on:
      - services-db
      - rabbitmq-service
      - cache-service
      - elasticsearch

  bid-service: 
    image: yagooliverce/bid-service:latest
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80;https://+:443
      - ConnectionStrings__BidServiceDb=Server=services-db;Database=BidService;User=sa;Password=dev@1234;Trust Server Certificate=True;
      - ConnectionStrings__RedisConnection=cache-service:6379,password=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      - RabbitMQ__Host=rabbitmq-service
      - RabbitMQ__VirtualHost=/
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__QueueName=bid-service
      - ElasticConfiguration__Uri=http://elasticsearch:9200
      - ElasticConfiguration__ServiceName=bids-service
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/certs/localhost.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password123
    volumes:
      - ./devcerts:/app/certs:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://bid-service/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - services-network
    depends_on:
      - services-db
      - rabbitmq-service
      - elasticsearch
  
  api-gateway:
    image: yagooliverce/api-gateway:latest
    container_name: api-gateway
    ports:
      - "9000:80"
      - "11000:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ReverseProxy__Clusters__auctions__Destinations__auctionApi__Address=http://auction-service/
      - ReverseProxy__Clusters__bids__LoadBalancingPolicy=RoundRobin
      - ReverseProxy__Clusters__bids__Destinations__bidApi__Address=http://bid-service/
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/certs/localhost.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password123
    volumes:
      - ./devcerts:/app/certs:ro
    networks:
      - services-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://api-gateway || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - bid-service
      - auction-service
volumes:
  sqlsystem:
  sqldata:
  sqllog:
  sqlbackup:
  elasticsearch-data:
